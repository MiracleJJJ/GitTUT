Git指令
touch new.txt #新建文件
git add new.txt #添加进版本库
git add . #添加所有
git commit -m "description" #提交更改
git status #查看状态
git diff new.txt #查看更改项
git log (--pretty=oneline) #查看提交日志
git log --graph --pretty=oneline --abbrev-commit #查看分支合并图
git reset --hard HEAD^ #回退到上个版本。HEAD表示当前版本，上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100。
git reset --hard commit ID #通过commitID回退
git reflog 查看命令历史
git checkout -- new.txt #撤销文件在工作区的修改
git reset HEAD file #撤销暂存区的修改
git rm #删除文件
git clone git@github.com : MiracleJJJ/仓库名.git #从远程库克隆

分支
git checkout -b dev #创建dev分支并切换到dev分支;新版git使用git switch -c dev命令
（git branch dev #创建dev分支
git checkout dev #切换至dev分支）
git branch #查看当前分支
git merge <分支名> #合并某分支到当前分支
git branch -d <分支名> #删除分支；-D 强行删除

git stash #储存当前工作区
git stash list #查看储存的工作区列表
git stash apply stash@{0} #恢复指定stash
git stash pop #回复并删除stash
git cherry-pick <提交码> #复制指定的提交到当前分支

git remote -v #查看远程库信息
git push origin branch-name #从本地推送分支
git checkout -b branch-name origin/branch-name #在本地创建远程分支对应的分支
git branch --set-upstream branch-name origin/branch-name #建立本地分支和远程分支的关联
git pull 从远程抓取分支